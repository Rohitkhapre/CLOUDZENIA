name: Build and Deploy Microservice

on:
  push:
    branches: 
      - master
      - main  # Adding main branch as many repositories use main instead of master
    paths:
      - 'microservice/**'
      - '.github/workflows/**'  # Also trigger on workflow file changes
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: dev
    
    steps:
    - name: Debugging Information
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Branch name: ${{ github.ref }}"
        echo "Repository: ${{ github.repository }}"
        echo "Workspace: ${{ github.workspace }}"
        echo "Current directory contents:"
        ls -la

    - uses: actions/checkout@v3

    - name: List Workspace Contents
      run: |
        echo "Repository contents:"
        ls -la
        echo "Microservice directory contents:"
        ls -la microservice || echo "Microservice directory not found!"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create ECR repository if not exists
      run: |
        REPO_NAME="$ENVIRONMENT-nodejs-microservice"
        echo "Creating/checking repository: $REPO_NAME"
        aws ecr describe-repositories --repository-names "$REPO_NAME" || \
        aws ecr create-repository --repository-name "$REPO_NAME"

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ENVIRONMENT }}-nodejs-microservice
        IMAGE_TAG: ${{ github.sha }}
      working-directory: ./microservice
      run: |
        echo "Building image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        echo "Current directory contents:"
        ls -la
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "Pushing images to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest 